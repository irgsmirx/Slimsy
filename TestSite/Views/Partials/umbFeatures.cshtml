@using Umbraco.Web.Models
@inherits UmbracoTemplatePage
@{
    // Model.Content is the current page that we're on
    // AncestorsOrSelf is all of the ancestors this page has in the tree
    // (1) means: go up to level 1 and stop looking for more ancestors when you get there
    // First() gets the first ancestor found (the home page, on level 1)
    var homePage = CurrentPage.AncestorsOrSelf(1).First();
}
<!-- Features -->
<section class="is-features">
    <h2 class="major"><span>Wonderful featured pages</span></h2>
    <div>
        <div class="row">

            <h2>How we currently roll Slimmage</h2>

            @foreach (var feature in homePage.umbTextPages.Where("featuredPage"))
            {
                <div class="3u">
                    <!-- Feature -->
                    <section class="is-feature">
                        @if (feature.HasValue("Image"))
                        {
                            var featureImage = Umbraco.TypedMedia((string) feature.Image);
                            <a href="@feature.Url" class="image image-full"><img src="@featureImage.GetCropUrl(270, 161, ratioMode: ImageCropRatioMode.Height, quality: 90, furtherOptions: "&slimmage=true")" alt=""/></a>
                        }
                        <h3><a href="@feature.Url">@feature.Name</a>
                        </h3>
                        @Umbraco.Truncate(feature.BodyText, 100)
                    </section>
                    <!-- /Feature -->
                </div>
            }

        </div>

        <div class="row">

            <h2>GetCropUrl Slimmage using HtmlHelper</h2>

            @foreach (var feature in homePage.umbTextPages.Where("featuredPage"))
            {
                <div class="3u">
                    <!-- Feature -->
                    <section class="is-feature">
                        @if (feature.HasValue("Image"))
                        {
                            var featureImage = Umbraco.TypedMedia((string)feature.Image);
                            <a href="@feature.Url" class="image image-full"><img src="@Html.GetCropUrl(featureImage, 270, 161, ratioMode:ImageCropRatioMode.Height, quality:90, furtherOptions:"&slimmage=true")" alt="" /></a>
                        }
                        <h3><a href="@feature.Url">@feature.Name</a></h3>
                        @Umbraco.Truncate(feature.BodyText, 100)
                    </section>
                    <!-- /Feature -->
                </div>
            }

        </div>

        <div class="row">

            <h2>Lets make it simple with Slimsy and work with Dynamics</h2>

            @foreach (var feature in homePage.umbTextPages.Where("featuredPage"))
            {
                <div class="3u">
                    <!-- Feature -->
                    <section class="is-feature">
                        @if (feature.HasValue("Image"))
                        {
                            var featureImage = Umbraco.Media(feature.Image);
                            <a href="@feature.Url" class="image image-full"><img src="@featureImage.GetResponsiveImageUrl(270, 161)" alt="" /></a>
                        }
                        <h3><a href="@feature.Url">@feature.Name</a></h3>
                        @Umbraco.Truncate(feature.BodyText, 100)
                    </section>
                    <!-- /Feature -->
                </div>
            }

        </div>

        <div class="row">

            <h2>Lets make it simple with Slimsy and work with Dynamics (overload)</h2>

            @foreach (var feature in homePage.umbTextPages.Where("featuredPage"))
            {
                <div class="3u">
                    <!-- Feature -->
                    <section class="is-feature">
                        @if (feature.HasValue("Image"))
                        {
                            var featureImage = Umbraco.Media(feature.Image);
                            <a href="@feature.Url" class="image image-full"><img src="@featureImage.GetResponsiveImageUrl(270, 161, "umbracoFile")" alt="" /></a>
                        }
                        <h3><a href="@feature.Url">@feature.Name</a></h3>
                        @Umbraco.Truncate(feature.BodyText, 100)
                    </section>
                    <!-- /Feature -->
                </div>
            }

        </div>
        
        <div class="row">

            <h2>Dynamics - return PNGs (Overload)</h2>

            @foreach (var feature in homePage.umbTextPages.Where("featuredPage"))
            {
                <div class="3u">
                    <!-- Feature -->
                    <section class="is-feature">
                        @if (feature.HasValue("Image"))
                        {
                            var featureImage = Umbraco.Media(feature.Image);
                            <a href="@feature.Url" class="image image-full"><img src="@featureImage.GetResponsiveImageUrl(270, 161, "umbracoFile", "png")" alt="" /></a>
                        }
                        <h3><a href="@feature.Url">@feature.Name</a></h3>
                        @Umbraco.Truncate(feature.BodyText, 100)
                    </section>
                    <!-- /Feature -->
                </div>
            }

        </div>        

        <div class="row">

            <h2>Lets make it simple with Slimsy using Typed model</h2>

            @foreach (var feature in homePage.umbTextPages.Where("featuredPage"))
            {
                <div class="3u">
                    <!-- Feature -->
                    <section class="is-feature">
                        @if (feature.HasValue("Image"))
                        {
                            var featureImage = Umbraco.TypedMedia((string)feature.Image);
                            <a href="@feature.Url" class="image image-full"><img src="@featureImage.GetResponsiveImageUrl(270, 161)" alt="" /></a>
                        }
                        <h3><a href="@feature.Url">@feature.Name</a></h3>
                        @Umbraco.Truncate(feature.BodyText, 100)
                    </section>
                    <!-- /Feature -->
                </div>
            }

        </div>
        
        <div class="row">

            <h2>Slimsy using Typed model, returning PNGs (no idea why)</h2>

            @foreach (var feature in homePage.umbTextPages.Where("featuredPage"))
            {
                <div class="3u">
                    <!-- Feature -->
                    <section class="is-feature">
                        @if (feature.HasValue("Image"))
                        {
                            var featureImage = Umbraco.TypedMedia((string)feature.Image);
                            <a href="@feature.Url" class="image image-full"><img src="@featureImage.GetResponsiveImageUrl(270, 161, "umbracoFile", "png")" alt="" /></a>
                        }
                        <h3><a href="@feature.Url">@feature.Name</a></h3>
                        @Umbraco.Truncate(feature.BodyText, 100)
                    </section>
                    <!-- /Feature -->
                </div>
            }

        </div>     

        <div class="row">

            <h2>Lets make it simple with Slimsy using a predefined crop</h2>

            @foreach (var feature in homePage.umbTextPages.Where("featuredPage"))
            {
                <div class="3u">
                    <!-- Feature -->
                    <section class="is-feature">
                        @if (feature.HasValue("Image"))
                        {
                            var featureImage = Umbraco.Media(feature.Image);
                            <a href="@feature.Url" class="image image-full"><img src="@featureImage.GetResponsiveCropUrl("home", "umbracoFile")" alt="" /></a>
                        }
                        <h3><a href="@feature.Url">@feature.Name</a></h3>
                        @Umbraco.Truncate(feature.BodyText, 100)
                    </section>
                    <!-- /Feature -->
                </div>
            }

        </div>

        <div class="row">

            <h2>Lets make it simple with Slimsy using a predefined crop - all PNGs</h2>

            @foreach (var feature in homePage.umbTextPages.Where("featuredPage"))
            {
                <div class="3u">
                    <!-- Feature -->
                    <section class="is-feature">
                        @if (feature.HasValue("Image"))
                        {
                            var featureImage = Umbraco.Media(feature.Image);
                            <a href="@feature.Url" class="image image-full"><img src="@featureImage.GetResponsiveCropUrl("home", "umbracoFile", "png")" alt=""/></a>
                        }
                        <h3><a href="@feature.Url">@feature.Name</a>
                        </h3>
                        @Umbraco.Truncate(feature.BodyText, 100)
                    </section>
                    <!-- /Feature -->
                </div>
            }

        </div>

    </div>
</section>
<!-- /Features -->